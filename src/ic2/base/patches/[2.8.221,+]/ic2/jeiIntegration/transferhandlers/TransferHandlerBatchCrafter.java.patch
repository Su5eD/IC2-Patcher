--- a/ic2/jeiIntegration/transferhandlers/TransferHandlerBatchCrafter.java
+++ b/ic2/jeiIntegration/transferhandlers/TransferHandlerBatchCrafter.java
@@ -2,8 +2,6 @@
 
 import ic2.core.IC2;
 import ic2.core.block.machine.container.ContainerBatchCrafter;
-import ic2.core.block.machine.tileentity.TileEntityBatchCrafter;
-import ic2.core.network.NetworkManager;
 import ic2.core.util.StackUtil;
 import java.util.Map;
 import mezz.jei.api.gui.IGuiIngredient;
@@ -13,7 +11,6 @@
 import mezz.jei.api.recipe.transfer.IRecipeTransferHandler;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.item.ItemStack;
-import net.minecraft.tileentity.TileEntity;
 
 public class TransferHandlerBatchCrafter implements IRecipeTransferHandler<ContainerBatchCrafter> {
    public Class<ContainerBatchCrafter> getContainerClass() {
@@ -28,19 +25,19 @@
          Map<Integer, ? extends IGuiIngredient<ItemStack>> map = iguiitemstackgroup.getGuiIngredients();
 
          for(int i = 0; i < 9; ++i) {
-            IGuiIngredient<ItemStack> iguiingredient = (IGuiIngredient)map.get(Integer.valueOf(i + 1));
+            IGuiIngredient<ItemStack> iguiingredient = map.get(i + 1);
             ItemStack itemstack;
             if (iguiingredient != null) {
-               itemstack = (ItemStack)iguiingredient.getDisplayedIngredient();
+               itemstack = iguiingredient.getDisplayedIngredient();
             } else {
                itemstack = StackUtil.emptyStack;
             }
 
-            ((TileEntityBatchCrafter)container.base).craftingGrid[i] = itemstack;
+            container.base.craftingGrid[i] = itemstack;
          }
-
-         ((NetworkManager)IC2.network.get(false)).updateTileEntityField((TileEntity)container.base, "craftingGrid");
-         ((NetworkManager)IC2.network.get(false)).initiateClientTileEntityEvent((TileEntity)container.base, 0);
+         
+         IC2.network.get(false).updateTileEntityField(container.base, "craftingGrid");
+         IC2.network.get(false).initiateClientTileEntityEvent(container.base, 0);
          return null;
       }
    }
