--- a/ic2/core/crop/TileEntityCrop.java
+++ b/ic2/core/crop/TileEntityCrop.java
@@ -773,12 +773,10 @@
          }
 
          int i1 = (int)Math.max(0L, Math.round(IC2.random.nextGaussian() * d0 * 0.6827D + d0));
-         List<ItemStack> list = (List)IntStream.range(0, i1).<ItemStack>mapToObj((ix) -> {
+         List<ItemStack> list = IntStream.range(0, i1).mapToObj((ix) -> {
             ItemStack[] aitemstack = this.crop.getGains(this);
-            return Arrays.stream((Object[])aitemstack).<ItemStack>map((drop) -> {
-               return !StackUtil.isEmpty(drop) && IC2.random.nextInt(100) <= this.getStatGain() ? StackUtil.incSize(drop) : drop;
-            });
-         }).<ItemStack>flatMap(Function.identity()).collect(Collectors.toList());
+            return Arrays.stream(aitemstack).map((drop) -> !StackUtil.isEmpty(drop) && IC2.random.nextInt(100) <= this.getStatGain() ? StackUtil.incSize(drop) : drop);
+         }).flatMap(Function.identity()).collect(Collectors.toList());
          this.setCurrentSize(this.crop.getSizeAfterHarvest(this));
          this.dirty = true;
          return list;
