--- a/ic2/jeiIntegration/recipe/machine/CannerCategory.java
+++ b/ic2/jeiIntegration/recipe/machine/CannerCategory.java
@@ -17,9 +17,7 @@
 import java.util.List;
 import java.util.Set;
 import mezz.jei.api.IGuiHelper;
-import mezz.jei.api.gui.IDrawable;
-import mezz.jei.api.gui.IGuiFluidStackGroup;
-import mezz.jei.api.gui.IRecipeLayout;
+import mezz.jei.api.gui.*;
 import mezz.jei.api.gui.IDrawableAnimated.StartDirection;
 import mezz.jei.api.ingredients.IIngredients;
 import mezz.jei.api.recipe.IRecipeWrapper;
@@ -50,37 +48,38 @@
       return new CannerCategory<ICannerBottleRecipeManager>(CannerCategory.CanningActivity.CANNING, guiHelper);
    }
 
-   protected CannerCategory(CannerCategory.CanningActivity activity, IGuiHelper guiHelper) {
-      super(TeBlock.canner, activity.manager);
+   protected CannerCategory(CanningActivity activity, IGuiHelper guiHelper) {
+      super(TeBlock.canner, (T) activity.manager);
       activity.createBackground(this.elements, guiHelper);
-      this.elements.add(new Tuple.T2(guiHelper.createDrawable(GuiCanner.texture, 176, activity.overlayV, 50, 14), new SlotPosition(23, 65)));
+      this.elements.add(new Tuple.T2<>(guiHelper.createDrawable(GuiCanner.texture, 176, activity.overlayV, 50, 14), new SlotPosition(23, 65)));
       this.emptyTank = guiHelper.createDrawable(GuiElement.commonTexture, 70, 100, 20, 55);
       this.tankBackground = guiHelper.createDrawable(GuiElement.commonTexture, 6, 100, 20, 55);
-      int i = -4;
-      int j = -4;
+      int borderX = -4;
+      int borderY = -4;
       this.tankOverlay = guiHelper.createDrawable(GuiElement.commonTexture, 38, 100, 20, 55, -4, -4, -4, -4);
       this.name = activity.mode.name();
-      this.progress.add(new Tuple.T2(guiHelper.createAnimatedDrawable(guiHelper.createDrawable(GuiCanner.texture, 233, 0, 23, 14), 66, StartDirection.LEFT, false), new SlotPosition(34, 6)));
-      List<SlotPosition> list = new ArrayList<SlotPosition>(2);
-      List<SlotPosition> list1 = Collections.<SlotPosition>emptyList();
-
-      for(CannerCategory.CanningActivity.Slot cannercategory$canningactivity$slot : activity.slots) {
-         switch(cannercategory$canningactivity$slot) {
-         case ADDITIVE:
-            list.add(new SlotPosition(39, 27));
-            break;
-         case CAN:
-            list.add(new SlotPosition(0, 0));
-            break;
-         case OUTPUT:
-            list1 = Collections.<SlotPosition>singletonList(new SlotPosition(78, 0));
+      this.progress.add(new Tuple.T2<>(guiHelper.createAnimatedDrawable(guiHelper.createDrawable(GuiCanner.texture, 233, 0, 23, 14), 66, IDrawableAnimated.StartDirection.LEFT, false), new SlotPosition(34, 6)));
+      ArrayList<SlotPosition> inputs = new ArrayList<SlotPosition>(2);
+      List<SlotPosition> outputs = Collections.emptyList();
+      block5: for (CanningActivity.Slot slot : activity.slots) {
+         switch (slot) {
+            case ADDITIVE: {
+               inputs.add(new SlotPosition(39, 27));
+               continue block5;
+            }
+            case CAN: {
+               inputs.add(new SlotPosition(0, 0));
+               continue block5;
+            }
+            case OUTPUT: {
+               outputs = Collections.singletonList(new SlotPosition(78, 0));
+            }
          }
       }
-
-      this.inputs = list;
-      this.outputs = list1;
+      this.inputs = inputs;
+      this.outputs = outputs;
       this.tanks = activity.tanks;
-      this.notTanks = this.tanks.length == 0 ? EnumSet.allOf(CannerCategory.CanningActivity.Tank.class) : EnumSet.complementOf(EnumSet.copyOf(Arrays.asList(this.tanks)));
+      this.notTanks = this.tanks.length == 0 ? EnumSet.allOf(CanningActivity.Tank.class) : EnumSet.complementOf(EnumSet.copyOf(Arrays.asList(this.tanks)));
    }
 
    public String getUid() {
