--- a/ic2/core/WindSim.java
+++ b/ic2/core/WindSim.java
@@ -20,7 +20,7 @@
       seaLevel = Math.max(0, seaLevel);
       double d0;
       if (seaLevel < height) {
-         d0 = (double)seaLevel;
+         d0 = seaLevel;
       } else {
          d0 = (double)height * 0.5D;
       }
@@ -29,50 +29,51 @@
       double d2 = (double)height * 1.125D;
       SimpleMatrix simplematrix = new SimpleMatrix(3, 3);
       SimpleMatrix simplematrix1 = new SimpleMatrix(3, 1);
-      simplematrix.setRow(0, 0, new double[]{d1, d1 * d1, d1 * d1 * d1});
+      simplematrix.setRow(0, 0, d1, d1 * d1, d1 * d1 * d1);
       simplematrix1.set(0, 1.0D);
-      simplematrix.setRow(1, 0, new double[]{d2, d2 * d2, d2 * d2 * d2});
+      simplematrix.setRow(1, 0, d2, d2 * d2, d2 * d2 * d2);
       simplematrix1.set(1, 0.0D);
-      simplematrix.setRow(2, 0, new double[]{1.0D, 2.0D * d1, 3.0D * d1 * d1});
+      simplematrix.setRow(2, 0, 1.0D, 2.0D * d1, 3.0D * d1 * d1);
       simplematrix1.set(2, 0.0D);
-      return (SimpleMatrix)simplematrix.solve(simplematrix1);
+      return simplematrix.solve(simplematrix1);
    }
 
    public void updateWind() {
-      if (this.windTicker++ % 128 == 0) {
-         int i = 10;
-         int j = 10;
-         if (this.windStrength > 20) {
-            i -= this.windStrength - 20;
-         } else if (this.windStrength < 10) {
-            j -= 10 - this.windStrength;
-         }
-
-         if (IC2.random.nextInt(100) < i) {
-            ++this.windStrength;
-         } else if (IC2.random.nextInt(100) < j) {
-            --this.windStrength;
-         }
-
-         switch(IC2.random.nextInt(3)) {
-         case 0:
-            this.windDirection = this.chancewindDirection(-18);
-         case 1:
-         default:
-            break;
-         case 2:
-            this.windDirection = this.chancewindDirection(18);
-         }
-
-      }
+       if (this.windTicker++ % 128 != 0) return;
+
+       int i = 10;
+       int j = 10;
+
+       if (this.windStrength > 20) {
+          i -= this.windStrength - 20;
+       } else if (this.windStrength < 10) {
+          j -= 10 - this.windStrength;
+       }
+
+       if (IC2.random.nextInt(100) < i) {
+          ++this.windStrength;
+       } else if (IC2.random.nextInt(100) < j) {
+          --this.windStrength;
+       }
+
+       switch(IC2.random.nextInt(3)) {
+       case 0:
+          this.windDirection = this.chancewindDirection(-18);
+       case 1:
+       default:
+          break;
+       case 2:
+          this.windDirection = this.chancewindDirection(18);
+       }
    }
 
    public double getWindAt(double height) {
-      double d0 = (double)this.windStrength;
+      double d0 = this.windStrength;
       SimpleMatrix simplematrix = new SimpleMatrix(1, 3);
-      simplematrix.setRow(0, 0, new double[]{height, height * height, height * height * height});
-      double d1 = Math.max(0.0D, ((SimpleMatrix)simplematrix.mult(this.windHeightCoefficients)).get(0));
+      simplematrix.setRow(0, 0, height, height * height, height * height * height);
+      double d1 = Math.max(0.0D, simplematrix.mult(this.windHeightCoefficients).get(0));
       d0 = d0 * d1;
+
       if (this.world.isThundering()) {
          d0 *= 1.5D;
       } else if (this.world.isRaining()) {
