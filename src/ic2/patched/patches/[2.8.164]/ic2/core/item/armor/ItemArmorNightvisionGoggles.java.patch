--- a/ic2/core/item/armor/ItemArmorNightvisionGoggles.java
+++ b/ic2/core/item/armor/ItemArmorNightvisionGoggles.java
@@ -4,8 +4,11 @@
 import ic2.api.item.IElectricItem;
 import ic2.api.item.IItemHudInfo;
 import ic2.core.IC2;
+import ic2.core.item.BaseElectricItem;
 import ic2.core.item.ElectricItemManager;
+import ic2.core.item.IPseudoDamageItem;
 import ic2.core.ref.ItemName;
+import ic2.core.util.LogCategory;
 import ic2.core.util.StackUtil;
 import java.util.LinkedList;
 import java.util.List;
@@ -20,7 +23,7 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public class ItemArmorNightvisionGoggles extends ItemArmorUtility implements IElectricItem, IItemHudInfo {
+public class ItemArmorNightvisionGoggles extends ItemArmorUtility implements IElectricItem, IItemHudInfo, IPseudoDamageItem {
    public ItemArmorNightvisionGoggles() {
       super(ItemName.nightvision_goggles, "nightvision", EntityEquipmentSlot.HEAD);
       this.setMaxDamage(27);
@@ -53,6 +56,7 @@
       NBTTagCompound nbttagcompound = StackUtil.getOrCreateNbtData(stack);
       boolean flag = nbttagcompound.getBoolean("active");
       byte b0 = nbttagcompound.getByte("toggleTimer");
+      int i = player.getEntityWorld().getLightFromNeighbors(new BlockPos(player));
       if (IC2.keyboard.isAltKeyDown(player) && IC2.keyboard.isModeSwitchKeyDown(player) && b0 == 0) {
          b0 = 10;
          flag = !flag;
@@ -62,6 +66,8 @@
                IC2.platform.messagePlayer(player, "Nightvision enabled.");
             } else {
                IC2.platform.messagePlayer(player, "Nightvision disabled.");
+               if (i > 8) IC2.platform.removePotion(player, MobEffects.BLINDNESS);
+               else IC2.platform.removePotion(player, MobEffects.NIGHT_VISION);
             }
          }
       }
@@ -73,7 +79,6 @@
 
       boolean flag1 = false;
       if (flag && IC2.platform.isSimulating() && ElectricItem.manager.use(stack, 1.0D, player)) {
-         int i = player.getEntityWorld().getLightFromNeighbors(new BlockPos(player));
          if (i > 8) {
             IC2.platform.removePotion(player, MobEffects.NIGHT_VISION);
             player.addPotionEffect(new PotionEffect(MobEffects.BLINDNESS, 100, 0, true, true));
@@ -99,5 +104,17 @@
 
    public boolean getIsRepairable(ItemStack par1ItemStack, ItemStack par2ItemStack) {
       return false;
+   }
+
+   public void setDamage(ItemStack stack, int damage) {
+      int i = this.getDamage(stack);
+      if (damage != i && BaseElectricItem.logIncorrectItemDamaging) {
+         IC2.log.warn(LogCategory.Armor, new Throwable(), "Detected invalid armor damage application (%d):", damage - i);
+      }
+   }
+
+   @Override
+   public void setStackDamage(ItemStack var1, int var2) {
+      super.setDamage(var1, var2);
    }
 }
